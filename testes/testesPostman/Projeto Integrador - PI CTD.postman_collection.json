{
	"info": {
		"_postman_id": "a2d7843d-c81e-43b6-a935-7eae72e5e2cc",
		"name": "Projeto Integrador - PI CTD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20377676"
	},
	"item": [
		{
			"name": "Categorias",
			"item": [
				{
					"name": "Criar - Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.qualificacao).to.not.be.empty;\r",
									"    pm.expect(response.descricao).to.not.be.empty;\r",
									"    pm.expect(response.urlImagem).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"qualificacao\": \"PickUps\",\r\n    \"descricao\": \"veículo utilitário com quatro portas, maior espaço interno que um carro hatch e bagageiro espaçoso\",\r\n    \"urlImagem\": \"https://uploads-ssl.webflow.com/5de0424183c9d7b00dd43bca/5f9071bf9bbc9f70d25745af_carros-sedan-mais-vendidos.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categorias",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categorias"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar - Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.exist;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categorias",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categorias"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar uma  - Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.qualificacao).to.not.be.empty;\r",
									"    pm.expect(response.descricao).to.not.be.empty;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categorias/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categorias",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar - Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.qualificacao).to.not.be.empty;\r",
									"    pm.expect(response.descricao).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"qualificacao\": \"Esportivos\",\r\n    \"descricao\": \"veículo de alto padrão, por isso maior e com características mais sofisticadas em comparação com um carro sedan\",\r\n    \"urlImagem\": \"https://img.olhardigital.com.br/wp-content/uploads/2022/06/polestar3-1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categorias/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categorias",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar - Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categorias/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categorias",
								"5"
							]
						}
					},
					"response": []
				}
			],
			"description": "Requests para teste de API da Entity Categoria"
		},
		{
			"name": "Características",
			"item": [
				{
					"name": "Criar - Características",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.nome).to.not.be.empty;\r",
									"    pm.expect(response.icone).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Espaçoso\",\r\n    \"icone\": \"https://cdn-icons-png.flaticon.com/512/694/694642.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/caracteristicas",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caracteristicas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar - Caracteristicas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.exist;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/caracteristicas",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caracteristicas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar uma  - Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.qualificacao).to.not.be.empty;\r",
									"    pm.expect(response.descricao).to.not.be.empty;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/caracteristicas/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caracteristicas",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar - Caracteristicas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.qualificacao).to.not.be.empty;\r",
									"    pm.expect(response.descricao).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Esportage\",\r\n    \"icone\": \"https://www.flaticon.com/br/icone-gratis/luxo_6045436\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/caracteristicas/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caracteristicas",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar - Caracteristicas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/caracteristicas/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caracteristicas",
								"12"
							]
						}
					},
					"response": []
				}
			],
			"description": "Requests para teste de API da Entity Categoria"
		},
		{
			"name": "Cidades",
			"item": [
				{
					"name": "Criar - Cidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.nome).to.not.be.empty;\r",
									"    pm.expect(response.pais).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Santos\",\r\n    \"pais\": \"Brasil\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cidades",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cidades"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar - Cidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.exist;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cidades",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cidades"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar uma  - Cidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.nome).to.not.be.empty;\r",
									"    pm.expect(response.pais).to.not.be.empty;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cidades/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cidades",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar - Cidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.nome).to.not.be.empty;\r",
									"    pm.expect(response.pais).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Piaui\",\r\n    \"pais\": \"Espanha\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cidades/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cidades",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar - Cidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cidades/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cidades",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Criar - Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.nome).to.not.be.empty;\r",
									"    pm.expect(response.descricao).to.not.be.empty;\r",
									"    pm.expect(response.caracteristicas).to.not.be.empty;\r",
									"    pm.expect(response.imagens).to.not.be.empty;\r",
									"    pm.expect(response.categoria).to.not.be.empty;\r",
									"    pm.expect(response.cidade).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Fiat UNO\",\r\n    \"descricao\": \"Carro lindo, estilso, e de alto padrão, ideal para pessoas que se acham superioores\",\r\n    \"caracteristicas\": [10,9],\r\n    \"imagens\": [\r\n        {\r\n            \"titulo\": \"Foto carro\",\r\n            \"url\": \"https://drive.google.com/file/d/1x822aFeKRrKv4Kr6T9MH3-9Iz-WDYxTw/view?usp=sharing\"\r\n        },\r\n        {\r\n            \"titulo\": \"Foto carro 2\",\r\n            \"url\": \"https://drive.google.com/file/d/16NFTjJUrZBAjosVczgEnYJezi7vlklnH/view?usp=sharing\"\r\n        }\r\n    ],\r\n    \"categoria\": 3,\r\n    \"cidade\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/produtos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar - Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.exist;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/produtos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar um - Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id).to.not.be.null;\r",
									"    pm.expect(response.nome).to.not.be.empty;\r",
									"    pm.expect(response.descricao).to.not.be.empty;\r",
									"    pm.expect(response.caracteristicas).to.not.be.empty;\r",
									"    pm.expect(response.imagens).to.not.be.empty;\r",
									"    pm.expect(response.categoria).to.not.be.empty;\r",
									"    pm.expect(response.cidade).to.not.be.empty;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/produtos/17",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"produtos",
								"17"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar por Cidade - Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.exist;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/produtos/listarPorCidade?cidade=4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"produtos",
								"listarPorCidade"
							],
							"query": [
								{
									"key": "cidade",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar pro Categoria - Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.exist;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/produtos/listarPorCategoria?categoria=3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"produtos",
								"listarPorCategoria"
							],
							"query": [
								{
									"key": "categoria",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar - Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    id: 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/produtos/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"produtos",
								"15"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}